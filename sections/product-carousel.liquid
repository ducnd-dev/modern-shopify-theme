{{ 'section-product-carousel.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<section class="product-carousel bg-neutral-50 dark:bg-neutral-800 section-{{ section.id }}-padding">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Section Header -->
    <div class="flex flex-col sm:flex-row sm:items-end sm:justify-between mb-8">
      <div class="mb-4 sm:mb-0">
        {%- if section.settings.badge_text != blank -%}
          <span class="inline-block px-4 py-2 bg-primary-100 dark:bg-primary-900 text-primary-700 dark:text-primary-300 text-sm font-medium rounded-full mb-4">
            {{ section.settings.badge_text }}
          </span>
        {%- endif -%}
        
        {%- if section.settings.heading != blank -%}
          <h2 class="text-3xl sm:text-4xl lg:text-5xl font-bold text-neutral-900 dark:text-neutral-100 mb-4 font-display">
            {{ section.settings.heading }}
          </h2>
        {%- endif -%}
        
        {%- if section.settings.description != blank -%}
          <p class="text-lg text-neutral-600 dark:text-neutral-400 max-w-2xl">
            {{ section.settings.description }}
          </p>
        {%- endif -%}
      </div>

      <!-- Navigation Controls -->
      <div class="flex items-center gap-4">
        <button 
          class="carousel-prev w-12 h-12 rounded-full bg-white dark:bg-neutral-700 border border-neutral-200 dark:border-neutral-600 flex items-center justify-center transition-all duration-300 hover:bg-primary-600 hover:border-primary-600 hover:text-white focus:outline-none focus:ring-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed"
          aria-label="Previous products"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
          </svg>
        </button>
        
        <button 
          class="carousel-next w-12 h-12 rounded-full bg-white dark:bg-neutral-700 border border-neutral-200 dark:border-neutral-600 flex items-center justify-center transition-all duration-300 hover:bg-primary-600 hover:border-primary-600 hover:text-white focus:outline-none focus:ring-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed"
          aria-label="Next products"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </button>
        
        {%- if section.settings.button_label != blank -%}
          <a 
            href="{{ section.settings.button_link | default: '#' }}" 
            class="hidden sm:inline-flex items-center px-6 py-3 bg-primary-600 hover:bg-primary-700 text-white font-semibold rounded-full transition-all duration-300 focus:outline-none focus:ring-4 focus:ring-primary-500/50"
          >
            {{ section.settings.button_label }}
            <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
            </svg>
          </a>
        {%- endif -%}
      </div>
    </div>

    <!-- Carousel Container -->
    <div class="relative overflow-hidden" data-carousel-container>
      <div class="carousel-track flex transition-transform duration-500 ease-in-out" data-carousel-track>
        {%- liquid
          assign collection_to_show = section.settings.collection
          if collection_to_show == blank
            assign collection_to_show = collections['all']
          endif
          
          assign products_to_show = section.settings.products_to_show | default: 12
        -%}

        {%- for product in collection_to_show.products limit: products_to_show -%}
          <div class="carousel-slide flex-none w-full sm:w-1/2 lg:w-1/3 xl:w-1/4 px-3">
            <div class="product-card group h-full">
              <div class="relative overflow-hidden rounded-2xl bg-white dark:bg-neutral-700 transition-all duration-300 group-hover:shadow-xl h-full flex flex-col">
                <!-- Product Image -->
                <div class="aspect-square relative overflow-hidden">
                  {%- if product.featured_media -%}
                    <img 
                      src="{{ product.featured_media | image_url: width: 400 }}"
                      srcset="{{ product.featured_media | image_url: width: 200 }} 200w,
                              {{ product.featured_media | image_url: width: 400 }} 400w,
                              {{ product.featured_media | image_url: width: 600 }} 600w"
                      sizes="(min-width: 1280px) 300px, (min-width: 1024px) 250px, (min-width: 640px) 200px, 300px"
                      alt="{{ product.featured_media.alt | escape }}"
                      class="w-full h-full object-cover transition-transform duration-700 group-hover:scale-110"
                      loading="lazy"
                    >
                    
                    <!-- Second Image on Hover -->
                    {%- if product.media[1] and section.settings.show_second_image -%}
                      <img 
                        src="{{ product.media[1] | image_url: width: 400 }}"
                        alt="{{ product.media[1].alt | escape }}"
                        class="absolute inset-0 w-full h-full object-cover transition-opacity duration-300 opacity-0 group-hover:opacity-100"
                        loading="lazy"
                      >
                    {%- endif -%}
                  {%- else -%}
                    <div class="w-full h-full bg-gradient-to-br from-neutral-200 to-neutral-300 dark:from-neutral-600 dark:to-neutral-700 flex items-center justify-center">
                      <svg class="w-16 h-16 text-neutral-400 dark:text-neutral-500" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z"/>
                      </svg>
                    </div>
                  {%- endif -%}

                  <!-- Badges -->
                  <div class="absolute top-3 left-3 flex flex-col gap-2">
                    {%- if product.compare_at_price > product.price -%}
                      {%- assign discount_percentage = product.compare_at_price | minus: product.price | times: 100 | divided_by: product.compare_at_price -%}
                      <span class="bg-red-500 text-white text-xs font-bold px-2 py-1 rounded-full">
                        -{{ discount_percentage }}%
                      </span>
                    {%- endif -%}
                    
                    {%- if product.available == false -%}
                      <span class="bg-neutral-800 text-white text-xs font-medium px-2 py-1 rounded-full">
                        Sold Out
                      </span>
                    {%- endif -%}
                    
                    {%- if product.tags contains 'new' -%}
                      <span class="bg-primary-500 text-white text-xs font-medium px-2 py-1 rounded-full">
                        New
                      </span>
                    {%- endif -%}
                  </div>

                  <!-- Quick Actions -->
                  <div class="absolute top-3 right-3 flex flex-col gap-2 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                    <!-- Wishlist -->
                    <button class="w-8 h-8 bg-white/90 backdrop-blur-sm rounded-full flex items-center justify-center transition-all duration-300 hover:bg-white hover:scale-110 focus:outline-none focus:ring-2 focus:ring-primary-500">
                      <svg class="w-4 h-4 text-neutral-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
                      </svg>
                    </button>
                    
                    <!-- Quick View -->
                    <button class="w-8 h-8 bg-white/90 backdrop-blur-sm rounded-full flex items-center justify-center transition-all duration-300 hover:bg-white hover:scale-110 focus:outline-none focus:ring-2 focus:ring-primary-500" data-quick-view="{{ product.id }}">
                      <svg class="w-4 h-4 text-neutral-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                      </svg>
                    </button>
                  </div>
                </div>

                <!-- Product Info -->
                <div class="p-4 flex-1 flex flex-col">
                  {%- if section.settings.show_vendor and product.vendor != blank -%}
                    <p class="text-sm text-neutral-500 dark:text-neutral-400 mb-1">{{ product.vendor }}</p>
                  {%- endif -%}
                  
                  <h3 class="font-semibold text-neutral-900 dark:text-neutral-100 mb-2 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors duration-300 line-clamp-2 flex-1">
                    <a href="{{ product.url }}" class="focus:outline-none focus:ring-2 focus:ring-primary-500 rounded">
                      {{ product.title }}
                    </a>
                  </h3>
                  
                  {%- if section.settings.show_rating -%}
                    <div class="flex items-center gap-1 mb-2">
                      {%- for i in (1..5) -%}
                        <svg class="w-3 h-3 text-yellow-400" fill="currentColor" viewBox="0 0 24 24">
                          <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                        </svg>
                      {%- endfor -%}
                      <span class="text-xs text-neutral-500 dark:text-neutral-400 ml-1">({{ product.metafields.reviews.rating_count | default: 0 }})</span>
                    </div>
                  {%- endif -%}
                  
                  <div class="flex items-center gap-2 mb-3">
                    <span class="font-bold text-lg text-neutral-900 dark:text-neutral-100">
                      {{ product.price | money }}
                    </span>
                    {%- if product.compare_at_price > product.price -%}
                      <span class="text-sm text-neutral-500 dark:text-neutral-400 line-through">
                        {{ product.compare_at_price | money }}
                      </span>
                    {%- endif -%}
                  </div>

                  <!-- Add to Cart Button -->
                  {%- if product.available -%}
                    <form action="{{ routes.cart_add_url }}" method="post" enctype="multipart/form-data" class="quick-add-form">
                      <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                      <button 
                        type="submit" 
                        class="w-full bg-primary-600 hover:bg-primary-700 text-white font-semibold py-2 px-4 rounded-lg transition-all duration-300 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-primary-500 flex items-center justify-center gap-2 text-sm"
                      >
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-2.5 5M7 13l2.5 5m0 0H17M9 18v.01M20 18v.01"></path>
                        </svg>
                        Add to Cart
                      </button>
                    </form>
                  {%- else -%}
                    <button disabled class="w-full bg-neutral-400 text-white font-semibold py-2 px-4 rounded-lg cursor-not-allowed text-sm">
                      Sold Out
                    </button>
                  {%- endif -%}
                </div>
              </div>
            </div>
          </div>
        {%- endfor -%}
      </div>
    </div>

    <!-- Dots Indicator -->
    {%- if section.settings.show_dots -%}
      <div class="flex justify-center mt-8 gap-2" data-carousel-dots>
        <!-- Dots will be generated by JavaScript -->
      </div>
    {%- endif -%}

    <!-- Mobile View All Button -->
    {%- if section.settings.button_label != blank -%}
      <div class="text-center mt-8 sm:hidden">
        <a 
          href="{{ section.settings.button_link | default: '#' }}" 
          class="inline-flex items-center px-6 py-3 bg-primary-600 hover:bg-primary-700 text-white font-semibold rounded-full transition-all duration-300 focus:outline-none focus:ring-4 focus:ring-primary-500/50"
        >
          {{ section.settings.button_label }}
          <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
          </svg>
        </a>
      </div>
    {%- endif -%}
  </div>
</section>

<script>
  class ProductCarousel {
    constructor(element) {
      this.container = element;
      this.track = element.querySelector('[data-carousel-track]');
      this.slides = element.querySelectorAll('.carousel-slide');
      this.prevBtn = element.querySelector('.carousel-prev');
      this.nextBtn = element.querySelector('.carousel-next');
      this.dotsContainer = element.querySelector('[data-carousel-dots]');
      
      this.currentIndex = 0;
      this.slidesToShow = this.getSlidesToShow();
      this.totalSlides = this.slides.length;
      this.maxIndex = Math.max(0, this.totalSlides - this.slidesToShow);
      
      this.init();
    }
    
    init() {
      this.setupEventListeners();
      this.createDots();
      this.updateCarousel();
      this.setupTouchEvents();
      
      // Auto-resize on window resize
      window.addEventListener('resize', () => {
        this.slidesToShow = this.getSlidesToShow();
        this.maxIndex = Math.max(0, this.totalSlides - this.slidesToShow);
        this.currentIndex = Math.min(this.currentIndex, this.maxIndex);
        this.updateCarousel();
        this.createDots();
      });
    }
    
    getSlidesToShow() {
      if (window.innerWidth >= 1280) return 4; // xl
      if (window.innerWidth >= 1024) return 3; // lg
      if (window.innerWidth >= 640) return 2;  // sm
      return 1; // mobile
    }
    
    setupEventListeners() {
      this.prevBtn?.addEventListener('click', () => this.prev());
      this.nextBtn?.addEventListener('click', () => this.next());
    }
    
    setupTouchEvents() {
      let startX = 0;
      let currentX = 0;
      let isDragging = false;
      
      this.track.addEventListener('touchstart', (e) => {
        startX = e.touches[0].clientX;
        isDragging = true;
      });
      
      this.track.addEventListener('touchmove', (e) => {
        if (!isDragging) return;
        currentX = e.touches[0].clientX;
        e.preventDefault();
      });
      
      this.track.addEventListener('touchend', () => {
        if (!isDragging) return;
        isDragging = false;
        
        const diff = startX - currentX;
        const threshold = 50;
        
        if (Math.abs(diff) > threshold) {
          if (diff > 0) {
            this.next();
          } else {
            this.prev();
          }
        }
      });
    }
    
    createDots() {
      if (!this.dotsContainer) return;
      
      this.dotsContainer.innerHTML = '';
      const dotsCount = this.maxIndex + 1;
      
      for (let i = 0; i < dotsCount; i++) {
        const dot = document.createElement('button');
        dot.className = 'w-2 h-2 rounded-full transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-primary-500';
        dot.addEventListener('click', () => this.goToSlide(i));
        this.dotsContainer.appendChild(dot);
      }
      
      this.updateDots();
    }
    
    updateDots() {
      if (!this.dotsContainer) return;
      
      const dots = this.dotsContainer.querySelectorAll('button');
      dots.forEach((dot, index) => {
        if (index === this.currentIndex) {
          dot.className = 'w-8 h-2 rounded-full bg-primary-600 transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-primary-500';
        } else {
          dot.className = 'w-2 h-2 rounded-full bg-neutral-300 dark:bg-neutral-600 transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-primary-500';
        }
      });
    }
    
    prev() {
      this.currentIndex = Math.max(0, this.currentIndex - 1);
      this.updateCarousel();
    }
    
    next() {
      this.currentIndex = Math.min(this.maxIndex, this.currentIndex + 1);
      this.updateCarousel();
    }
    
    goToSlide(index) {
      this.currentIndex = Math.max(0, Math.min(this.maxIndex, index));
      this.updateCarousel();
    }
    
    updateCarousel() {
      const slideWidth = 100 / this.slidesToShow;
      const translateX = -this.currentIndex * slideWidth;
      this.track.style.transform = `translateX(${translateX}%)`;
      
      // Update button states
      this.prevBtn.disabled = this.currentIndex === 0;
      this.nextBtn.disabled = this.currentIndex === this.maxIndex;
      
      this.updateDots();
    }
  }
  
  // Initialize all carousels
  document.addEventListener('DOMContentLoaded', function() {
    const carousels = document.querySelectorAll('[data-carousel-container]');
    carousels.forEach(carousel => new ProductCarousel(carousel));
  });
</script>

{% schema %}
{
  "name": "Product Carousel",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "badge_text",
      "label": "Badge text"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Trending Products"
    },
    {
      "type": "textarea",
      "id": "description",
      "label": "Description"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection",
      "info": "Leave empty to show all products"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 4,
      "max": 50,
      "step": 2,
      "label": "Products to show",
      "default": 12
    },
    {
      "type": "header",
      "content": "Product card settings"
    },
    {
      "type": "checkbox",
      "id": "show_second_image",
      "label": "Show second image on hover",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "label": "Show vendor",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "label": "Show product rating",
      "default": true
    },
    {
      "type": "header",
      "content": "Carousel settings"
    },
    {
      "type": "checkbox",
      "id": "show_dots",
      "label": "Show dot indicators",
      "default": true
    },
    {
      "type": "header",
      "content": "Button"
    },
    {
      "type": "text",
      "id": "button_label",
      "label": "Button label"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button link"
    },
    {
      "type": "header",
      "content": "Section padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 36
    }
  ],
  "presets": [
    {
      "name": "Product Carousel"
    }
  ]
}
{% endschema %}