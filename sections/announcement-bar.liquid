{{ 'section-announcement-bar.css' | asset_url | stylesheet_tag }}

{%- if section.settings.show_announcement -%}
  <div class="announcement-bar relative overflow-hidden {{ section.settings.color_scheme }}" data-announcement-bar>
    <!-- Background -->
    <div class="absolute inset-0">
      {%- if section.settings.background_image != blank -%}
        <img 
          src="{{ section.settings.background_image | image_url: width: 1920 }}"
          alt="{{ section.settings.background_image.alt | escape }}"
          class="w-full h-full object-cover"
        >
        <div class="absolute inset-0 bg-black/{{ section.settings.overlay_opacity }}"></div>
      {%- else -%}
        <div class="w-full h-full {{ section.settings.background_color }}"></div>
      {%- endif -%}
    </div>

    <!-- Animated Background Elements -->
    {%- if section.settings.show_animation -%}
      <div class="absolute inset-0 overflow-hidden pointer-events-none">
        <div class="absolute -top-4 -left-4 w-24 h-24 bg-white/5 rounded-full animate-pulse"></div>
        <div class="absolute top-1/2 right-10 w-16 h-16 bg-white/5 rounded-full animate-bounce-subtle"></div>
        <div class="absolute -bottom-4 left-1/3 w-20 h-20 bg-white/5 rounded-full animate-pulse-soft"></div>
      </div>
    {%- endif -%}

    <!-- Content -->
    <div class="relative z-10 py-3 px-4">
      <div class="container mx-auto max-w-6xl">
        {%- if section.blocks.size > 1 -%}
          <!-- Multiple announcements - Carousel -->
          <div class="announcement-carousel relative" data-announcement-carousel>
            <div class="announcement-track flex transition-transform duration-500 ease-in-out" data-announcement-track>
              {%- for block in section.blocks -%}
                <div class="announcement-slide flex-none w-full" {{ block.shopify_attributes }}>
                  <div class="flex items-center justify-center text-center">
                    {%- if block.settings.icon != blank -%}
                      <span class="mr-2 text-lg">{{ block.settings.icon }}</span>
                    {%- endif -%}
                    
                    {%- if block.settings.link != blank -%}
                      <a 
                        href="{{ block.settings.link }}" 
                        class="text-white hover:text-white/80 transition-colors duration-300 font-medium flex items-center group"
                      >
                        <span>{{ block.settings.text }}</span>
                        {%- if block.settings.show_arrow -%}
                          <svg class="ml-2 w-4 h-4 transform group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
                          </svg>
                        {%- endif -%}
                      </a>
                    {%- else -%}
                      <span class="text-white font-medium">{{ block.settings.text }}</span>
                    {%- endif -%}
                  </div>
                </div>
              {%- endfor -%}
            </div>

            <!-- Navigation Dots -->
            {%- if section.settings.show_dots and section.blocks.size > 1 -%}
              <div class="absolute right-4 top-1/2 transform -translate-y-1/2 flex space-x-1" data-announcement-dots>
                {%- for block in section.blocks -%}
                  <button 
                    class="w-2 h-2 rounded-full bg-white/30 hover:bg-white/60 transition-colors duration-300 focus:outline-none focus:bg-white/60"
                    data-slide="{{ forloop.index0 }}"
                    aria-label="Go to announcement {{ forloop.index }}"
                  ></button>
                {%- endfor -%}
              </div>
            {%- endif -%}
          </div>
        {%- elsif section.blocks.size == 1 -%}
          <!-- Single announcement -->
          {%- assign block = section.blocks.first -%}
          <div class="flex items-center justify-center text-center" {{ block.shopify_attributes }}>
            {%- if block.settings.icon != blank -%}
              <span class="mr-2 text-lg">{{ block.settings.icon }}</span>
            {%- endif -%}
            
            {%- if block.settings.link != blank -%}
              <a 
                href="{{ block.settings.link }}" 
                class="text-white hover:text-white/80 transition-colors duration-300 font-medium flex items-center group"
              >
                <span>{{ block.settings.text }}</span>
                {%- if block.settings.show_arrow -%}
                  <svg class="ml-2 w-4 h-4 transform group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
                  </svg>
                {%- endif -%}
              </a>
            {%- else -%}
              <span class="text-white font-medium">{{ block.settings.text }}</span>
            {%- endif -%}
          </div>
        {%- endif -%}

        <!-- Close Button -->
        {%- if section.settings.show_close_button -%}
          <button
            class="absolute right-4 top-1/2 transform -translate-y-1/2 text-white/70 hover:text-white transition-colors duration-300 focus:outline-none focus:ring-2 focus:ring-white/30 rounded p-1"
            data-close-announcement
            aria-label="Close announcement"
          >
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        {%- endif -%}
      </div>
    </div>
  </div>

  <script>
    class AnnouncementBar {
      constructor() {
        this.announcementBar = document.querySelector('[data-announcement-bar]');
        this.carousel = document.querySelector('[data-announcement-carousel]');
        this.track = document.querySelector('[data-announcement-track]');
        this.slides = document.querySelectorAll('.announcement-slide');
        this.dots = document.querySelectorAll('[data-announcement-dots] button');
        this.closeButton = document.querySelector('[data-close-announcement]');
        
        this.currentIndex = 0;
        this.autoplayInterval = null;
        
        this.init();
      }
      
      init() {
        if (!this.announcementBar) return;
        
        this.setupEventListeners();
        
        if (this.slides.length > 1) {
          this.startAutoplay();
          this.updateDots();
        }
      }
      
      setupEventListeners() {
        // Close button
        this.closeButton?.addEventListener('click', () => this.close());
        
        // Dot navigation
        this.dots.forEach((dot, index) => {
          dot.addEventListener('click', () => this.goToSlide(index));
        });
        
        // Pause autoplay on hover
        this.carousel?.addEventListener('mouseenter', () => this.pauseAutoplay());
        this.carousel?.addEventListener('mouseleave', () => this.startAutoplay());
        
        // Keyboard navigation
        document.addEventListener('keydown', (e) => {
          if (e.key === 'Escape') this.close();
        });
      }
      
      goToSlide(index) {
        this.currentIndex = index;
        const translateX = -index * 100;
        this.track.style.transform = `translateX(${translateX}%)`;
        this.updateDots();
      }
      
      nextSlide() {
        this.currentIndex = (this.currentIndex + 1) % this.slides.length;
        this.goToSlide(this.currentIndex);
      }
      
      updateDots() {
        this.dots.forEach((dot, index) => {
          if (index === this.currentIndex) {
            dot.classList.add('bg-white/60');
            dot.classList.remove('bg-white/30');
          } else {
            dot.classList.add('bg-white/30');
            dot.classList.remove('bg-white/60');
          }
        });
      }
      
      startAutoplay() {
        if (this.slides.length <= 1) return;
        
        this.autoplayInterval = setInterval(() => {
          this.nextSlide();
        }, {{ section.settings.autoplay_speed | default: 5000 }});
      }
      
      pauseAutoplay() {
        if (this.autoplayInterval) {
          clearInterval(this.autoplayInterval);
          this.autoplayInterval = null;
        }
      }
      
      close() {
        this.announcementBar.style.display = 'none';
        
        // Remember user preference
        if ({{ section.settings.remember_close | json }}) {
          localStorage.setItem('announcement-bar-closed', 'true');
        }
      }
    }
    
    // Initialize announcement bar
    document.addEventListener('DOMContentLoaded', () => {
      // Check if user previously closed the announcement
      {%- if section.settings.remember_close -%}
        if (localStorage.getItem('announcement-bar-closed') === 'true') {
          const announcementBar = document.querySelector('[data-announcement-bar]');
          if (announcementBar) {
            announcementBar.style.display = 'none';
            return;
          }
        }
      {%- endif -%}
      
      new AnnouncementBar();
    });
  </script>
{%- endif -%}

{% schema %}
{
  "name": "Announcement bar",
  "max_blocks": 5,
  "settings": [
    {
      "type": "checkbox",
      "id": "show_announcement",
      "label": "Show announcement bar",
      "default": true
    },
    {
      "type": "header",
      "content": "Appearance"
    },
    {
      "type": "select",
      "id": "color_scheme",
      "label": "Color scheme",
      "options": [
        {
          "value": "bg-primary-600",
          "label": "Primary"
        },
        {
          "value": "bg-accent-600",
          "label": "Accent"
        },
        {
          "value": "bg-neutral-900",
          "label": "Dark"
        },
        {
          "value": "bg-red-600",
          "label": "Red"
        },
        {
          "value": "bg-green-600",
          "label": "Green"
        },
        {
          "value": "bg-gradient-to-r from-primary-600 to-accent-600",
          "label": "Gradient"
        }
      ],
      "default": "bg-primary-600"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Custom background color"
    },
    {
      "type": "image_picker",
      "id": "background_image",
      "label": "Background image"
    },
    {
      "type": "range",
      "id": "overlay_opacity",
      "min": 0,
      "max": 80,
      "step": 5,
      "unit": "%",
      "label": "Background image overlay opacity",
      "default": 40
    },
    {
      "type": "checkbox",
      "id": "show_animation",
      "label": "Show background animation",
      "default": true
    },
    {
      "type": "header",
      "content": "Behavior"
    },
    {
      "type": "checkbox",
      "id": "show_close_button",
      "label": "Show close button",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "remember_close",
      "label": "Remember when users close",
      "default": true,
      "info": "Announcement won't show again until browser data is cleared"
    },
    {
      "type": "checkbox",
      "id": "show_dots",
      "label": "Show navigation dots",
      "default": true,
      "info": "Only visible when multiple announcements are added"
    },
    {
      "type": "range",
      "id": "autoplay_speed",
      "min": 2000,
      "max": 8000,
      "step": 500,
      "unit": "ms",
      "label": "Autoplay speed",
      "default": 5000,
      "info": "Time between slide changes"
    }
  ],
  "blocks": [
    {
      "type": "announcement",
      "name": "Announcement",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "label": "Text",
          "default": "Welcome to our store! Free shipping on orders over $99."
        },
        {
          "type": "text",
          "id": "icon",
          "label": "Icon (emoji)",
          "info": "Optional icon to display before text"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Link"
        },
        {
          "type": "checkbox",
          "id": "show_arrow",
          "label": "Show arrow icon",
          "default": true,
          "info": "Only shown when link is provided"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Announcement bar",
      "blocks": [
        {
          "type": "announcement",
          "settings": {
            "text": "Free shipping on orders over $99",
            "icon": "🚚"
          }
        }
      ]
    }
  ]
}
{% endschema %}